{"ast":null,"code":"import { setDoc, doc, getDoc } from \"firebase/firestore\";\nimport { db, collection, getDocs, addDoc } from \"./firebase\";\nconst dbCollection = collection(db, \"Codes\");\nexport const DataBase = {\n  getDocsList: async () => {\n    const snapshot = await getDocs(dbCollection);\n    return snapshot;\n  },\n  addCodeBlock: async (title, code) => {\n    await addDoc(dbCollection, {\n      title,\n      code\n    });\n  },\n  getCode: async id => {\n    const snapshot = await getDocs(dbCollection);\n    const document = snapshot.docs.find(doc => doc.id === id);\n    return document ? document.data() : null;\n  },\n  // Define a function to update a specific document\n  updateDocument: async (id, newData) => {\n    try {\n      const docRef = doc(db, \"Codes\", id);\n      const docSnapshot = await getDoc(docRef);\n      if (!docSnapshot.exists()) {\n        throw new Error(`Document with ID ${id} does not exist`);\n      }\n\n      // Update the document with the new data\n      await setDoc(docRef, {\n        title: docSnapshot.data().title,\n        code: newData\n      }, {\n        merge: true\n      });\n      console.log('Document updated successfully!');\n    } catch (error) {\n      console.error('Error updating document:', error);\n    }\n  }\n};\nexport default DataBase;","map":{"version":3,"names":["setDoc","doc","getDoc","db","collection","getDocs","addDoc","dbCollection","DataBase","getDocsList","snapshot","addCodeBlock","title","code","getCode","id","document","docs","find","data","updateDocument","newData","docRef","docSnapshot","exists","Error","merge","console","log","error"],"sources":["/Users/ashwal/Desktop/fullstack/coding-web-app/client/src/back/DataBase.js"],"sourcesContent":["import { setDoc , doc , getDoc } from \"firebase/firestore\";\nimport { db, collection, getDocs, addDoc } from \"./firebase\";\n\nconst dbCollection = collection(db, \"Codes\")\n\nexport const DataBase = {\n  getDocsList: async () => {\n    const snapshot = await getDocs(dbCollection);\n    return snapshot;\n  },\n  addCodeBlock: async (title, code) => {\n    await addDoc(dbCollection, { title, code });\n  },\n  getCode: async (id) => {\n    const snapshot = await getDocs(dbCollection);\n    const document = snapshot.docs.find(doc => doc.id === id);\n    return document ? document.data() : null;\n  },\n  // Define a function to update a specific document\n  updateDocument: async (id, newData) => {\n    try {\n      const docRef = doc(db, \"Codes\", id);\n      const docSnapshot = await getDoc(docRef);\n      \n      if (!docSnapshot.exists()) {\n        throw new Error(`Document with ID ${id} does not exist`);\n      }\n  \n      // Update the document with the new data\n      await setDoc(docRef, { title: docSnapshot.data().title, code: newData }, { merge: true });\n      console.log('Document updated successfully!');\n    } catch (error) {\n      console.error('Error updating document:', error);\n    }\n  }\n}\n\n\nexport default DataBase;"],"mappings":"AAAA,SAASA,MAAM,EAAGC,GAAG,EAAGC,MAAM,QAAQ,oBAAoB;AAC1D,SAASC,EAAE,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAQ,YAAY;AAE5D,MAAMC,YAAY,GAAGH,UAAU,CAACD,EAAE,EAAE,OAAO,CAAC;AAE5C,OAAO,MAAMK,QAAQ,GAAG;EACtBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMC,QAAQ,GAAG,MAAML,OAAO,CAACE,YAAY,CAAC;IAC5C,OAAOG,QAAQ;EACjB,CAAC;EACDC,YAAY,EAAE,MAAAA,CAAOC,KAAK,EAAEC,IAAI,KAAK;IACnC,MAAMP,MAAM,CAACC,YAAY,EAAE;MAAEK,KAAK;MAAEC;IAAK,CAAC,CAAC;EAC7C,CAAC;EACDC,OAAO,EAAE,MAAOC,EAAE,IAAK;IACrB,MAAML,QAAQ,GAAG,MAAML,OAAO,CAACE,YAAY,CAAC;IAC5C,MAAMS,QAAQ,GAAGN,QAAQ,CAACO,IAAI,CAACC,IAAI,CAACjB,GAAG,IAAIA,GAAG,CAACc,EAAE,KAAKA,EAAE,CAAC;IACzD,OAAOC,QAAQ,GAAGA,QAAQ,CAACG,IAAI,CAAC,CAAC,GAAG,IAAI;EAC1C,CAAC;EACD;EACAC,cAAc,EAAE,MAAAA,CAAOL,EAAE,EAAEM,OAAO,KAAK;IACrC,IAAI;MACF,MAAMC,MAAM,GAAGrB,GAAG,CAACE,EAAE,EAAE,OAAO,EAAEY,EAAE,CAAC;MACnC,MAAMQ,WAAW,GAAG,MAAMrB,MAAM,CAACoB,MAAM,CAAC;MAExC,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC,CAAC,EAAE;QACzB,MAAM,IAAIC,KAAK,CAAC,oBAAoBV,EAAE,iBAAiB,CAAC;MAC1D;;MAEA;MACA,MAAMf,MAAM,CAACsB,MAAM,EAAE;QAAEV,KAAK,EAAEW,WAAW,CAACJ,IAAI,CAAC,CAAC,CAACP,KAAK;QAAEC,IAAI,EAAEQ;MAAQ,CAAC,EAAE;QAAEK,KAAK,EAAE;MAAK,CAAC,CAAC;MACzFC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF;AACF,CAAC;AAGD,eAAerB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}