{"version":3,"sources":["db/firebase.js","db/DataBase.js","socket.js","components/Lobby.js","components/CodeBlock.js","components/AddCodeBlock.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","dbCollection","collection","DataBase","getDocsList","async","getDocs","error","console","addCodeBlock","title","code","solution","addDoc","mentor","log","editMentor","id","mentorID","docRef","doc","docSnapshot","getDoc","exists","Error","concat","setDoc","data","merge","getData","document","docs","find","updateData","newData","getStatus","prettier","require","format","parser","socket","io","Lobby","codeBlocks","setCodeBlocks","useState","useEffect","codeBlocksList","map","fetchCodeBlocks","disconnect","React","createElement","className","style","color","block","key","onClick","codeBlockId","window","location","href","handleCodeBlockClick","Link","to","FaPlus","fontSize","CodeBlock","setCode","setTitle","complete","setComplete","useLocation","params","URLSearchParams","search","pathname","split","pop","role","get","timer","setTimeout","clearTimeout","fetchData","on","updatedCode","off","HiArrowCircleLeft","Fragment","value","onChange","e","target","emit","required","preventDefault","chackSolution","aria-label","SyntaxHighlighter","language","docco","AddCodeBlock","setSolution","type","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e54979c4.chunk.js","sourcesContent":["\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, getDocs, addDoc } from 'firebase/firestore';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCz-PX9Vl-E_hSmm1rhgWQihnEQR_QZDT8\",\n  authDomain: \"webworkspace-54d30.firebaseapp.com\",\n  projectId: \"webworkspace-54d30\",\n  storageBucket: \"webworkspace-54d30.appspot.com\",\n  messagingSenderId: \"465147165848\",\n  appId: \"1:465147165848:web:3827f79f607582c931a4ed\",\n  measurementId: \"G-E1D1CD7FDS\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nconst db = getFirestore(app);\n\nexport { db, collection, getDocs, addDoc };","import { setDoc, doc, getDoc } from \"firebase/firestore\";\nimport { db, collection, getDocs, addDoc } from \"./firebase\";\n\nconst dbCollection = collection(db, \"Codes\")\n\nexport const DataBase = {\n  getDocsList: async () => {\n    try {\n      const snapshot = await getDocs(dbCollection);\n      return snapshot;\n    } catch (error) {\n      console.error('Error pulling docs list: ', error);\n    }\n  },\n  addCodeBlock: async (title, code, solution) => {\n    try {\n      // Add document to Firestore collection\n      addDoc(dbCollection, {\n        title: title,\n        code: code,\n        solution: solution,\n        mentor: 'true'// Assuming mentor is a boolean field\n      });\n\n      console.log('Code block added successfully!');\n    } catch (error) {\n      console.error('Error adding code block: ', error);\n    }\n  },\n  editMentor: async (id, mentorID) => {\n    try {\n      const docRef = doc(db, \"Codes\", id);\n      const docSnapshot = await getDoc(docRef);\n\n      if (!docSnapshot.exists()) {\n        throw new Error(`Document with ID ${id} does not exist`);\n      }\n\n      // Update the document with the new data\n      await setDoc(docRef, {\n        title: docSnapshot.data().title,\n        code: docSnapshot.data().code,\n        mentor: mentorID,\n        solution: docSnapshot.data().solution\n      }, { merge: true });\n      console.log('Document updated successfully!');\n    } catch (error) {\n      console.error('Error edit mentor:', error);\n    }\n  },\n  getData: async (id) => {\n    try {\n      const snapshot = await getDocs(dbCollection);\n      const document = snapshot.docs.find(doc => doc.id === id);\n      return document ? document.data() : null;\n    } catch (error) {\n      console.error('Error pulling data:', error);\n    }\n\n  },\n  // Define a function to update a specific document\n  updateData: async (id, newData) => {\n    try {\n      const docRef = doc(db, \"Codes\", id);\n      const docSnapshot = await getDoc(docRef);\n\n      if (!docSnapshot.exists()) {\n        throw new Error(`Document with ID ${id} does not exist`);\n      }\n\n      // Update the document with the new data\n      await setDoc(docRef, { title: docSnapshot.data().title, code: newData }, { merge: true });\n      console.log('Document updated successfully!');\n    } catch (error) {\n      console.error('Error updating data:', error);\n    }\n  },\n  getStatus: async (id, data) => {\n    try {\n      const snapshot = await getDocs(dbCollection);\n      const document = snapshot.docs.find(doc => doc.id === id);\n      const prettier = require(\"prettier\");\n  \n      return prettier.format(data, { parser: \"babel\" }) === prettier.format(document.data().solution, { parser: \"babel\" });\n    } catch (error) {\n      console.error('Error checking the solution:', error);\n    }\n  }\n}\n\n\nexport default DataBase;","// socket.js\n\nimport io from 'socket.io-client';\n\nconst socket = io('https://web-app-release.onrender.com'); // Initialize Socket.IO client with server URL\n//const socket = io('http://localhost:5010/');\nexport default socket;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles.css';\nimport { DataBase } from '../db/DataBase'\nimport socket from '../socket';\nimport { FaPlus } from \"react-icons/fa\";\n\nconst Lobby = () => {\n    const [codeBlocks, setCodeBlocks] = useState([]);\n\n    useEffect(() => {\n        const fetchCodeBlocks = async () => {\n            try {\n                const querySnapshot = await DataBase.getDocsList();\n                const codeBlocksList = querySnapshot.docs.map(doc => ({ id: doc.id, title: doc.data().title, data: doc.data().data, mentor: doc.data().mentor }));\n                setCodeBlocks(codeBlocksList);\n            } catch (error) {\n                console.error('Error fetching code blocks:', error);\n            }\n        };\n        fetchCodeBlocks();\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    const handleCodeBlockClick = async (codeBlockId, mentor) => {\n        // Determine role (mentor or student) and navigate to the code block page\n        if (mentor === 'true') {\n            await DataBase.editMentor(codeBlockId, 'false')\n            // Navigate to the code block page with the role 'mentor'\n            window.location.href = `/codeblock/${codeBlockId}?role=mentor`;\n        } else {\n            // Navigate to the code block page with the role 'student'\n            window.location.href = `/codeblock/${codeBlockId}?role=student`;\n        }\n    };\n\n    return (\n        <div className=\"background-container\">\n            <div className=\"container\">\n                <div className=\"codeblocks-container\">\n                    <h1 style={{ color: '#403029' }}>Choose code block</h1>\n                    <div className=\"scrollable-section\">\n                        <ul>\n                            {codeBlocks.map(block => (\n                                <li key={block.id}>\n                                    <button onClick={() => handleCodeBlockClick(block.id, block.mentor)}>{block.title}</button>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"add-code-block\">\n                    <h2 style={{ color: '#403029' }}>Add Code Block</h2>\n                    <Link to=\"/add\">\n                        <FaPlus style={{ color: '#366A68', fontSize: '40px' }} />\n                    </Link>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default Lobby;\n","import React, { useEffect, useState } from 'react';\nimport { DataBase } from '../db/DataBase';\nimport { Link, useLocation } from 'react-router-dom';\nimport { HiArrowCircleLeft } from \"react-icons/hi\";\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport socket from '../socket';\n\n\nconst CodeBlock = () => {\n    const [code, setCode] = useState('');\n    const [title, setTitle] = useState('');\n    const [complete, setComplete] = useState(false);\n    const location = useLocation();\n    // Get the query parameters from the URL\n    const params = new URLSearchParams(location.search);\n    const codeBlockId = location.pathname.split('/').pop();\n    const role = params.get('role');\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n            try {\n                if (complete) {\n                    const timer = setTimeout(() => {\n                        setComplete(false);\n                    }, 3000);\n                    return () => clearTimeout(timer);\n                }\n                const data = await DataBase.getData(codeBlockId);\n                setCode(data.code);\n                setTitle(data.title);\n            } catch (error) {\n                console.error('Error fetching code block:', error);\n            }\n        };\n\n        fetchData();\n\n\n        // Listen for updated code from the server\n        socket.on('newUpdatedCode', (updatedCode , id) => {\n            if (id === codeBlockId) {\n                setCode(updatedCode);\n            }\n            \n        });\n\n        return () => {\n            socket.off('newUpdatedCode');\n        };\n\n\n    }, [codeBlockId, complete]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await DataBase.updateData(codeBlockId, code);\n            const chackSolution = await DataBase.getStatus(codeBlockId, code);\n            setComplete(chackSolution);\n        } catch (error) {\n            console.error('Error adding code block:', error);\n        }\n    };\n\n    return (\n        <div className='background-container'>\n            <Link to=\"/\">\n                <HiArrowCircleLeft className=\"btn-submit-back\"></HiArrowCircleLeft>\n            </Link>\n            <div className=\"form-group-codeblock\">\n                <div className='head'> Code: {title}</div>\n                {role === 'student' ? (\n                    <>\n                        <textarea className='textarea-code' id=\"code\" value={code} onChange={(e) => { setCode(e.target.value); socket.emit('updatedCode', e.target.value , codeBlockId); }} required />\n                        <button onClick={handleSubmit} className=\"btn-submit-save\"> Save </button>\n                        {complete && (\n                            <div className='popup-style'>\n                                <span role=\"img\" aria-label=\"smiley\">😊</span>\n                            </div>\n                        )}\n                        </>\n                        ) : ( \n                        <SyntaxHighlighter language=\"javascript\" style={docco}>\n                            {code}\n                        </SyntaxHighlighter>\n                )}\n                    </div>\n        </div>\n            );\n};\n            export default CodeBlock;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { DataBase } from '../db/DataBase';\nimport { HiArrowCircleLeft } from \"react-icons/hi\";\n\nconst AddCodeBlock = () => {\n    const [title, setTitle] = useState('');\n    const [code, setCode] = useState('');\n    const [solution, setSolution] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            if (title !== '') {\n                await DataBase.addCodeBlock(title, code , solution);\n                setTitle('')\n                setCode('')\n                setSolution('')\n            }\n            // Redirect to the lobby page after successful submission\n        } catch (error) {\n            console.error('Error adding code block:', error);\n            // Handle error (e.g., display an error message)\n        }\n    };\n\n    return (\n        <div className=\"background-container\">\n            <Link to=\"/\">\n                <HiArrowCircleLeft className=\"btn-submit-back\"></HiArrowCircleLeft>\n            </Link>\n            <div className=\"add-code-block-container\">\n                <form className=\"add-code-block-form\">\n                    <div className=\"form-group\">\n                        <div className='head'> Title</div>\n                        <input type=\"text\" id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className='head'> Code:</div>\n                        <textarea id=\"code\" value={code} onChange={(e) => setCode(e.target.value)} required />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className='head'> Solution:</div>\n                        <textarea id=\"solution\" value={solution} onChange={(e) => setSolution(e.target.value)} required />\n                    </div>\n                    <button onClick={handleSubmit} className=\"btn-submit\"> Submit </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default AddCodeBlock;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Lobby from './components/Lobby';\nimport CodeBlock from './components/CodeBlock';\nimport AddCodeBlock from './components/AddCodeBlock';\nimport io from 'socket.io-client';\n\nconst socket = io(); // Establish socket connection\n\nfunction App() {\n\n    useEffect(() => {\n        return () => {\n            socket.disconnect(); // Clean up socket connection on component unmount\n        };\n    }, []);\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<Lobby />} />\n                <Route path=\"/codeblock/:id\" element={<CodeBlock />} />\n                <Route path=\"/add\" element={<AddCodeBlock />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}