{"version":3,"sources":["back/firebase.js","back/DataBase.js","socket.js","components/Lobby.js","components/CodeBlock.js","components/AddCodeBlock.js","App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","dbCollection","collection","DataBase","getDocsList","async","getDocs","addCodeBlock","title","code","addDoc","getCode","document","docs","find","doc","id","data","updateDocument","newData","docRef","docSnapshot","getDoc","exists","Error","concat","setDoc","merge","console","log","error","socket","io","Lobby","codeBlocks","setCodeBlocks","useState","useEffect","codeBlocksList","map","fetchCodeBlocks","emit","disconnect","React","createElement","className","block","key","Link","to","CodeBlock","useParams","setCode","setTitle","role","setRole","flag","setflag","fetchData","on","updatedCode","off","HiArrowCircleLeft","Fragment","value","onChange","e","target","required","onClick","preventDefault","window","location","reload","SyntaxHighlighter","language","style","docco","AddCodeBlock","htmlFor","type","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.3ee25cf4.chunk.js","sourcesContent":["\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, getDocs, addDoc } from 'firebase/firestore';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCz-PX9Vl-E_hSmm1rhgWQihnEQR_QZDT8\",\n  authDomain: \"webworkspace-54d30.firebaseapp.com\",\n  projectId: \"webworkspace-54d30\",\n  storageBucket: \"webworkspace-54d30.appspot.com\",\n  messagingSenderId: \"465147165848\",\n  appId: \"1:465147165848:web:3827f79f607582c931a4ed\",\n  measurementId: \"G-E1D1CD7FDS\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nconst db = getFirestore(app);\n\nexport { db, collection, getDocs, addDoc };","import { setDoc , doc , getDoc } from \"firebase/firestore\";\nimport { db, collection, getDocs, addDoc } from \"./firebase\";\n\nconst dbCollection = collection(db, \"Codes\")\n\nexport const DataBase = {\n  getDocsList: async () => {\n    const snapshot = await getDocs(dbCollection);\n    return snapshot;\n  },\n  addCodeBlock: async (title, code) => {\n    await addDoc(dbCollection, { title, code });\n  },\n  getCode: async (id) => {\n    const snapshot = await getDocs(dbCollection);\n    const document = snapshot.docs.find(doc => doc.id === id);\n    return document ? document.data() : null;\n  },\n  // Define a function to update a specific document\n  updateDocument: async (id, newData) => {\n    try {\n      const docRef = doc(db, \"Codes\", id);\n      const docSnapshot = await getDoc(docRef);\n      \n      if (!docSnapshot.exists()) {\n        throw new Error(`Document with ID ${id} does not exist`);\n      }\n  \n      // Update the document with the new data\n      await setDoc(docRef, { title: docSnapshot.data().title, code: newData }, { merge: true });\n      console.log('Document updated successfully!');\n    } catch (error) {\n      console.error('Error updating document:', error);\n    }\n  }\n}\n\n\nexport default DataBase;","// socket.js\n\nimport io from 'socket.io-client';\n\nconst socket = io('https://web-app-release.onrender.com'); // Initialize Socket.IO client with server URL\n\nexport default socket;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles.css';\nimport { DataBase } from '../back/DataBase'\nimport socket from '../socket'; \n\nconst Lobby = () => {\n    const [codeBlocks, setCodeBlocks] = useState([]);\n\n    useEffect(() => {\n        const fetchCodeBlocks = async () => {\n            try {\n                const querySnapshot = await DataBase.getDocsList();\n                const codeBlocksList = querySnapshot.docs.map(doc => ({ id: doc.id, title: doc.data().title, data: doc.data().data }));\n                setCodeBlocks(codeBlocksList);\n                console.log(\"codeBlocksList:\", codeBlocksList);\n            } catch (error) {\n                console.error('Error fetching code blocks:', error);\n            }\n        };\n        fetchCodeBlocks();\n        socket.emit('joinRoom', \"Lobby\");\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"code-container\">\n            <h1>Choose code block</h1>\n                <div className=\"scrollable-section\">\n                    <ul>\n                        {codeBlocks.map(block => (\n                            <li key={block.id}>\n                                <Link to={`/codeblock/${block.id}`}>{block.title}</Link>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n            <div className=\"add-code-block\">\n                <h2>Add Code Block</h2>\n                <Link to=\"/add\">\n                    <button>Add</button>\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Lobby;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { DataBase } from '../back/DataBase';\nimport { Link } from 'react-router-dom';\nimport { HiArrowCircleLeft } from \"react-icons/hi\";\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport socket from '../socket';\n\n\nconst CodeBlock = () => {\n    const { id } = useParams();\n    const [code, setCode] = useState('');\n    const [title, setTitle] = useState('');\n    const [role, setRole] = useState(false);\n    const [flag, setflag] = useState(true);\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                if (flag) {\n                    setRole(true);\n                    setflag(false);\n                }\n                const data = await DataBase.getCode(id);\n                setCode(data.code);\n                setTitle(data.title)\n            } catch (error) {\n                console.error('Error fetching code block:', error);\n            }\n        };\n        socket.emit('joinRoom', \"Lobby\");\n        fetchData();\n\n        // Listen for updated code from the server\n        socket.on('newUpdatedCode', (updatedCode) => {\n            setCode(updatedCode);\n        });\n        return () => {\n            socket.off('newUpdatedCode');\n        };\n\n    }, [flag , id]);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await DataBase.updateDocument(id, code);\n            window.location.reload();\n        } catch (error) {\n            console.error('Error adding code block:', error);\n        }\n    };\n    return (\n        <div>\n            <Link to=\"/\">\n                <HiArrowCircleLeft className=\"btn-submit-back\"></HiArrowCircleLeft>\n            </Link>\n            <div className=\"form-group-code\">\n                <div className='head'> Code: {title}</div>\n                {role ? (\n                    <>\n                        <textarea className='textarea-code' id=\"code\" value={code} onChange={(e) => { setCode(e.target.value); socket.emit('updatedCode', e.target.value); }} required />\n                        <button onClick={handleSubmit} className=\"btn-submit-save\"> Save </button>\n                    </>\n                ) : (\n                    <SyntaxHighlighter language=\"javascript\" style={docco}>\n                        {code}\n                    </SyntaxHighlighter>\n                )}\n                <SyntaxHighlighter language=\"javascript\" style={docco}>\n                    {code}\n                </SyntaxHighlighter>\n            </div>\n        </div>\n    );\n};\nexport default CodeBlock;\n","import React, { useState , useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport { DataBase } from '../back/DataBase';\nimport socket from '../socket'; \n\nconst AddCodeBlock = () => {\n    const [title, setTitle] = useState('');\n    const [code, setCode] = useState('');\n    useEffect(() => {\n        socket.emit('joinRoom', \"AddCodeBock\");\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            await DataBase.addCodeBlock(title, code);\n            setTitle('')\n            setCode('')\n            \n            // Redirect to the lobby page after successful submission\n        } catch (error) {\n            console.error('Error adding code block:', error);\n            // Handle error (e.g., display an error message)\n        }\n    };\n\n    return (\n        <div className=\"add-code-block-container\"> \n            <h2>Add Code Block</h2>\n            <form className=\"add-code-block-form\">\n                <div className=\"form-group\"> \n                    <label htmlFor=\"title\">Title:</label>\n                    <input type=\"text\" id=\"title\" value={title} onChange={(e) => setTitle(e.target.value)} required />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"code\">Code:</label>\n                    <textarea id=\"code\" value={code} onChange={(e) => setCode(e.target.value)} required />\n                </div>\n                <button onClick={handleSubmit} className=\"btn-submit\"> Submit </button>\n                <Link to=\"/\">\n                    <button className=\"btn-submit\">Lobby</button>\n                </Link>\n            </form>\n        </div>\n    );\n};\n\nexport default AddCodeBlock;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Lobby from './components/Lobby';\nimport CodeBlock from './components/CodeBlock';\nimport AddCodeBlock from './components/AddCodeBlock';\nimport io from 'socket.io-client';\n\nconst socket = io(); // Establish socket connection\n\nfunction App() {\n    useEffect(() => {\n        return () => {\n            socket.disconnect(); // Clean up socket connection on component unmount\n        };\n    }, []);\n\n    return (\n        <Router>\n            <Routes>\n                <Route path=\"/\" element={<Lobby />} />\n                <Route path=\"/codeblock/:id\" element={<CodeBlock />} />\n                <Route path=\"/add\" element={<AddCodeBlock />} />\n            </Routes>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}